require('dotenv').config();
const fs = require('fs');
const path = require('path');
const { Client, Collection, GatewayIntentBits, REST, Routes, ActivityType } = require('discord.js');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const requiredEnvVars = ['DISCORD_TOKEN', 'CLIENT_ID', 'GUILD_ID'];
const missingEnvVars = requiredEnvVars.filter(varName => !process.env[varName]);

if (missingEnvVars.length > 0) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingEnvVars.join(', '));
  process.exit(1);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ],
  presence: {
    activities: [{
      name: '/hentai',
      type: ActivityType.Playing
    }],
    status: 'online'
  }
});

client.commands = new Collection();

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–∞–Ω–¥
const commands = [];
const commandsPath = path.join(__dirname, 'commands');

if (!fs.existsSync(commandsPath)) {
  console.error('‚ùå –ü–∞–ø–∫–∞ commands –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  process.exit(1);
}

const commandFiles = fs.readdirSync(commandsPath).filter(file => file.endsWith('.js'));

console.log(`üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ ${commandFiles.length} –∫–æ–º–∞–Ω–¥...`);

for (const file of commandFiles) {
  try {
    const filePath = path.join(commandsPath, file);
    const command = require(filePath);
    
    if (!command.data || !command.execute) {
      console.warn(`‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥–∞ ${file} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç data –∏–ª–∏ execute`);
      continue;
    }
    
    client.commands.set(command.data.name, command);
    commands.push(command.data.toJSON());
    console.log(`  ‚úì ${command.data.name}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–∞–Ω–¥—ã ${file}:`, error.message);
  }
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –≤ Discord
const rest = new REST({ version: '10' }).setToken(process.env.DISCORD_TOKEN);

(async () => {
  try {
    console.log('üîÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥...');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥–∏–ª—å–¥–∏–∏ (–±—ã—Å—Ç—Ä–µ–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    await rest.put(
      Routes.applicationGuildCommands(process.env.CLIENT_ID, process.env.GUILD_ID),
      { body: commands }
    );
    
    console.log('‚úÖ –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    
    // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    // await rest.put(
    //   Routes.applicationCommands(process.env.CLIENT_ID),
    //   { body: commands }
    // );
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥:', error);
  }
})();

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
const eventsPath = path.join(__dirname, 'events');

if (!fs.existsSync(eventsPath)) {
  console.warn('‚ö†Ô∏è  –ü–∞–ø–∫–∞ events –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞—é...');
  fs.mkdirSync(eventsPath);
}

const eventFiles = fs.readdirSync(eventsPath).filter(file => file.endsWith('.js'));

console.log(`üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ ${eventFiles.length} —Å–æ–±—ã—Ç–∏–π...`);

for (const file of eventFiles) {
  try {
    const filePath = path.join(eventsPath, file);
    const event = require(filePath);
    
    if (!event.name || !event.execute) {
      console.warn(`‚ö†Ô∏è  –°–æ–±—ã—Ç–∏–µ ${file} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç name –∏–ª–∏ execute`);
      continue;
    }
    
    if (event.once) {
      client.once(event.name, (...args) => event.execute(...args, client));
    } else {
      client.on(event.name, (...args) => event.execute(...args, client));
    }
    
    console.log(`  ‚úì ${event.name}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏—è ${file}:`, error.message);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (error) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:', error);
});

process.on('uncaughtException', (error) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
  process.exit(1);
});

// Graceful shutdown
process.on('SIGINT', async () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...');
  client.destroy();
  process.exit(0);
});

process.on('SIGTERM', async () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...');
  client.destroy();
  process.exit(0);
});

// –õ–æ–≥–∏–Ω
console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
client.login(process.env.DISCORD_TOKEN).catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Discord:', error);
  process.exit(1);
});